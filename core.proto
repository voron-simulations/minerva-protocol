syntax = "proto3";

package Minerva.Protocol;

import "common.proto";
import "group.proto";
import "commands.proto";
import "zone.proto";

message AnyServerToClientMessage {
  optional string transaction_id = 1;

  oneof message { 
    // *Update and *Response messages only
    SimulationStateUpdate sim_state_update = 10;
    GroupStateUpdate group_state_update = 11;
    ListGroupsResponse list_groups_response = 12;
    ZoneStateUpdate zone_state_update = 13;
    ListZonesResponse list_zones_response = 14;
    GetZoneResponse get_zone_response = 15;
  }
}

message AnyClientToServerMessage {
  optional string transaction_id = 1;

  oneof message {
    // *Request and *CommandRequest messages only
    ListGroupsRequest list_groups_request = 20;
    GroupStateUpdateRequest get_group_request = 21;
    ListZonesRequest list_zones_request = 22;
    GetZoneRequest get_zone_request = 23;
    MoveCommandRequest move_command = 24;
    SearchAndDestroyCommandRequest sad_command = 25;
  }
}

service MessageExchangeService {
  rpc SendMessages(stream AnyClientToServerMessage) returns (stream AnyServerToClientMessage);
}
